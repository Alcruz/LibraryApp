@model LibraryApp.Models.Order

@{
    if (Model.OrderStatus.Description == "Pendiente")
    {
        ViewBag.Title = "Aprobar";
    }

    if (Model.OrderStatus.Description == "Aceptada")
    {
        ViewBag.Title = "Entregar";
    }

    if (Model.OrderStatus.Description == "Entregada")
    {
        ViewBag.Title = "Finalizar";
    }
}

@{ 
    if (Model.OrderStatus.Description == "Pendiente")
    {
        <h2>Aprobar</h2>
    }

    if (Model.OrderStatus.Description == "Aceptada")
    {
        <h2>Entregar</h2>
    }

    if (Model.OrderStatus.Description == "Entregada")
    {
        <h2>Finalizar</h2>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Órdenes</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrderId)
        @Html.HiddenFor(model => model.UserName)
        @Html.HiddenFor(model => model.OrderDate)
        @Html.HiddenFor(model => model.WishStatusId)
        @Html.HiddenFor(model => model.BookId)
        @Html.HiddenFor(model => model.StartDate)
        @Html.HiddenFor(model => model.FinishDate)
        
        @if (Model.OrderStatus.Description == "Pendiente")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FinishDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FinishDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FinishDate, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @{ 
                    if (Model.OrderStatus.Description == "Pendiente")
                    {
                        <input type="submit" value="Aprobar" class="btn btn-primary" />
                    }

                    if (Model.OrderStatus.Description == "Aceptada")
                    {
                        <input type="submit" value="Entregar" class="btn btn-primary" />
                    }

                    if (Model.OrderStatus.Description == "Entregada")
                    {
                        <input type="submit" value="Finalizar" class="btn btn-primary" />
                    }
                }

                @Html.ActionLink("Regresar a la lista", "Index", new { }, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
